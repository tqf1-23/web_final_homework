{"ast":null,"code":"var _jsxFileName = \"E:\\\\demo-app\\\\src\\\\TodoList.js\";\nimport React, { Component, useState, Fragment, useEffect } from 'react';\nimport ListItem from './ListItem';\nimport NewItem from './NewItem';\nimport { getTodos, addTodo, deleteTodo, updateTodo } from \"./api/TodoApi\";\n\nconst TodoList = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [list, setList] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  const handleLoadTasks = () => {\n    getTodos().then(response => {\n      setList(response);\n    }).catch(error => {\n      setError(\"Unable to retrieve todo's\");\n    });\n  };\n\n  const handleAddTask = () => {\n    if (inputValue === \"\") return;\n    const newTask = {\n      id: _.parseInt(list.length ? list[list.length - 1].id : 0) + 1,\n      content: inputValue\n    };\n    addTodo(newTask).then(() => {\n      setList([...list, newTask]);\n      setInputValue(\"\");\n    });\n  };\n\n  const handleDeleteTask = id => deleteTodo(id).then(() => {\n    setList(list.filter(item => item.id !== id));\n  });\n\n  const handleUpdateTask = task => {\n    if (task.content === \"\") return;\n    updateTodo(task).then(response => {\n      setList(list.map(x => x.id === response.id ? { ...x,\n        ...response\n      } : x));\n    });\n  };\n\n  useEffect(() => {\n    handleLoadTasks();\n  }, []);\n\n  if (list === null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 12\n      }\n    }, \"Tasks is loading ...\");\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }\n    }, error);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 14\n    }\n  }, list.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(NewItem, {\n    addItem: this.handleAddTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default TodoList;","map":{"version":3,"sources":["E:/demo-app/src/TodoList.js"],"names":["React","Component","useState","Fragment","useEffect","ListItem","NewItem","getTodos","addTodo","deleteTodo","updateTodo","TodoList","inputValue","setInputValue","list","setList","error","setError","handleLoadTasks","then","response","catch","handleAddTask","newTask","id","_","parseInt","length","content","handleDeleteTask","filter","item","handleUpdateTask","task","map","x"],"mappings":"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","sourcesContent":["import React, { Component,useState, Fragment, useEffect } from 'react';\r\nimport ListItem from './ListItem';\r\nimport NewItem from './NewItem';\r\nimport { getTodos, addTodo, deleteTodo, updateTodo } from \"./api/TodoApi\";\r\n\r\nconst TodoList = () => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [list, setList] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleLoadTasks = () => {\r\n    getTodos()\r\n      .then((response) => {\r\n        setList(response);\r\n      })\r\n      .catch((error) => {\r\n        setError(\"Unable to retrieve todo's\");\r\n      });\r\n  };\r\n\r\n  const handleAddTask = () => {\r\n    if (inputValue === \"\") return;\r\n\r\n    const newTask = {\r\n      id: _.parseInt(list.length ? list[list.length - 1].id : 0) + 1,\r\n      content: inputValue,\r\n    };\r\n\r\n    addTodo(newTask).then(() => {\r\n      setList([...list, newTask]);\r\n      setInputValue(\"\");\r\n    });\r\n  };\r\n\r\n  const handleDeleteTask = (id) =>\r\n    deleteTodo(id).then(() => {\r\n      setList(list.filter((item) => item.id !== id));\r\n    });\r\n\r\n  const handleUpdateTask = (task) => {\r\n    if (task.content === \"\") return;\r\n\r\n    updateTodo(task).then((response) => {\r\n      setList(\r\n        list.map((x) => (x.id === response.id ? { ...x, ...response } : x))\r\n      );\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleLoadTasks();\r\n  }, []);\r\n\r\n  if (list === null) {\r\n    return <div>Tasks is loading ...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n  return(\r\n             <div>\r\n                {\r\n                    list.map(item=>(\r\n                        <div>\r\n                            <ListItem item={item}/>\r\n                        </div>\r\n                    ))\r\n                }\r\n                <NewItem addItem={this.handleAddTask}/>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}