{"ast":null,"code":"var _jsxFileName = \"E:\\\\demo-app\\\\src\\\\TodoList.js\";\nimport React, { Component, useState, Fragment, useEffect } from 'react';\nimport ListItem from './ListItem';\nimport NewItem from './NewItem';\nimport { getTodos, addTodo, deleteTodo, updateTodo } from \"./api/TodoApi\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLoadTasks = () => {\n      getTodos().then(response => {\n        setList(response);\n      }).catch(error => {\n        setError(\"Unable to retrieve todo's\");\n      });\n    };\n\n    this.handleAddTask = inputV => {\n      if (inputV === \"\") return;\n      const newTask = {\n        id: _.parseInt(list.length ? list[list.length - 1].id : 0) + 1,\n        content: inputV\n      };\n      addTodo(newTask).then(() => {\n        setList([...list, newTask]);\n        setInputValue(\"\");\n      });\n    };\n\n    this.handleDeleteTask = id => deleteTodo(id).then(() => {\n      setList(list.filter(item => item.id !== id));\n    });\n\n    this.handleUpdateTask = task => {\n      if (task.content === \"\") return;\n      updateTodo(task).then(response => {\n        setList(list.map(x => x.id === response.id ? { ...x,\n          ...response\n        } : x));\n      });\n    };\n\n    this.addNewItem = newItemContent => {\n      const newList = [...this.state.todoList, {\n        content: newItemContent,\n        done: false\n      }];\n      this.setState({\n        todoList: newList\n      });\n    };\n\n    this.state = {\n      todoList: [{\n        content: 'React practice',\n        done: true\n      }, {\n        content: 'game time',\n        done: false\n      }]\n    };\n  }\n\n  render() {\n    const [inputValue, setInputValue] = useState(\"\");\n    const [list, setList] = useState(null);\n    const [error, setError] = useState(\"\");\n    useEffect(() => {\n      handleLoadTasks();\n    }, []);\n\n    if (list === null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 18\n        }\n      }, \"Tasks is loading ...\");\n    }\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 18\n        }\n      }, error);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, this.state.todoList.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      item: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(NewItem, {\n      addItem: this.handleAddTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["E:/demo-app/src/TodoList.js"],"names":["React","Component","useState","Fragment","useEffect","ListItem","NewItem","getTodos","addTodo","deleteTodo","updateTodo","TodoList","constructor","props","handleLoadTasks","then","response","setList","catch","error","setError","handleAddTask","inputV","newTask","id","_","parseInt","list","length","content","setInputValue","handleDeleteTask","filter","item","handleUpdateTask","task","map","x","addNewItem","newItemContent","newList","state","todoList","done","setState","render","inputValue"],"mappings":"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","sourcesContent":["import React, { Component,useState, Fragment, useEffect } from 'react';\r\nimport ListItem from './ListItem';\r\nimport NewItem from './NewItem';\r\nimport { getTodos, addTodo, deleteTodo, updateTodo } from \"./api/TodoApi\";\r\n\r\nclass TodoList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            todoList:[\r\n                {content:'React practice',done:true},\r\n                {content:'game time',done:false}\r\n              ]\r\n        }\r\n    }\r\n    handleLoadTasks = () => {\r\n        getTodos()\r\n          .then((response) => {\r\n            setList(response);\r\n          })\r\n          .catch((error) => {\r\n            setError(\"Unable to retrieve todo's\");\r\n          });\r\n      };\r\n    \r\n    handleAddTask = (inputV) => {\r\n        if (inputV === \"\") return;\r\n    \r\n        const newTask = {\r\n          id: _.parseInt(list.length ? list[list.length - 1].id : 0) + 1,\r\n          content: inputV,\r\n        };\r\n    \r\n        addTodo(newTask).then(() => {\r\n          setList([...list, newTask]);\r\n          setInputValue(\"\");\r\n        });\r\n      };\r\n    \r\n    handleDeleteTask = (id) =>\r\n        deleteTodo(id).then(() => {\r\n          setList(list.filter((item) => item.id !== id));\r\n        });\r\n    \r\n    handleUpdateTask = (task) => {\r\n        if (task.content === \"\") return;\r\n    \r\n        updateTodo(task).then((response) => {\r\n          setList(\r\n            list.map((x) => (x.id === response.id ? { ...x, ...response } : x))\r\n          );\r\n        });\r\n      };\r\n    addNewItem=(newItemContent)=>{\r\n        const newList=[...this.state.todoList,{content:newItemContent,done:false}]\r\n        this.setState({\r\n            todoList:newList\r\n        })\r\n    }\r\n    render(){\r\n        const [inputValue, setInputValue] = useState(\"\");\r\n        const [list, setList] = useState(null);\r\n        const [error, setError] = useState(\"\");\r\n        useEffect(() => {\r\n          handleLoadTasks();\r\n        }, []);\r\n      \r\n        if (list === null) {\r\n          return <div>Tasks is loading ...</div>;\r\n        }\r\n      \r\n        if (error) {\r\n          return <div>{error}</div>;\r\n        }\r\n      \r\n        return(\r\n            \r\n            <div>\r\n                {\r\n                    this.state.todoList.map(item=>(\r\n                        <div>\r\n                            <ListItem item={item}/>\r\n                        </div>\r\n                    ))\r\n                }\r\n                <NewItem addItem={this.handleAddTask}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}